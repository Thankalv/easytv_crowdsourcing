<script type="text/javascript">
  var isBlocked = <%= isBlocked %>;

</script>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
  <!-- Content Header (Page header) -->
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1 class="m-0 text-dark"> <%= userTitle %> Dashboard</h1>
        </div><!-- /.col -->
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item active">Dashboard</li>
          </ol>
        </div><!-- /.col -->
      </div><!-- /.row -->
    </div><!-- /.container-fluid -->
  </div>
  <!-- /.content-header -->

  <!-- Main content -->
  <section class="content">
    <div class="container-fluid">

        <div class="row" style="margin:auto; width:50%;">
            <!-- Info boxes -->
              <% if (session.User) { %>
                <% if (session.User.access != "admin" && session.User.access != "superadmin") { %>
                  <%- include partials/userLangs %>
                 <% } %>
              <% } %>
          </div>
      <!-- /.row -->
      
      <% if (session.User) { %>
        <% if (session.User.access != "admin" && session.User.access != "superadmin") { %>
          <br>

          <% if (isBlocked==false) { %>
            <%- include partials/assignedJobs %>
          <% } %>

          <div id="assignbox"></div>
          <br>
          <%- include partials/broadcasterJobs %>
          <br> <br>
            <% if (session.User.settings.showOtherJobs == "yes") { %>
              <%- include partials/otherJobs %>
            <% } %>

          <% } else { %>

           <%- include partials/adminPanel %>

          <% } %>
      <% } %>
      
      <br>
      <div class="row" style="margin: auto;width: 100%;">
        
              <% if (session.authenticated && (session.User.access != "admin" && session.User.access != "superadmin") )  { %>
                <div class="col-md-5 offset-md-1">
                  <% } else { %>
                <div class="col-md-4 offset-md-4">
                  <% } %>
                  <!-- Widget: user widget style -->
                  <div class="card">
                    <!-- Add the bg color to the header using any of the bg-* classes -->
                    <div class="card-header border-transparent" style="background-color: #bad4ef !important" >
                      <div class="card-title" >
                        <h5 class="widget-user-desc" style="margin-left:3px"> <i class="fa fa-list-ul "></i> Platform Activity Overview</h5>
                      </div>
                      <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-widget="collapse">
                          <i class="fa fa-minus"></i>
                        </button>
                      </div>
                  </div>

                    <div class="card-footer p-0">
                      <ul class="nav flex-column">
                        <li class="nav-item">
                          <div  class="nav-link" >
                              <% if (session.authenticated)  { %>
                              Name <span class="float-right badge bg-primary"> <%= session.User.userOrganisation.name %>  </span>
                              <% } else { %>
                                <span style="color:blue;font-weight: 500;"> The EasyTV Crowdsourcing Platform </span>
                              <% } %>
                          </div>
                        </li>
                        <li class="nav-item">
                            <div class="nav-link" >
                                <i class="fa fa-files-o"></i>   Jobs Published <span class="float-right badge bg-info"> <%= jobsPosted %> </span>
                            </div>
                          </li>
                        <li class="nav-item">
                          <div class="nav-link" >
                              <i class="fa fa-users"></i>  Registered Members <span class="float-right badge bg-info"> <%= orgMembers %> </span>
                          </div>
                        </li>
                      </ul>
                    </div>
                  </div>
            </div>

            <% if (!session.authenticated)  { %>
              <%- include partials/signIn %>
              <% } %>

            <% if (session.User) { %>
              <% if (session.User.access != "admin" && session.User.access != "superadmin") { %>
                <%- include partials/userStats %>
               <% } %>
            <% } %>
        </div>

    </div><!--/. container-fluid -->
  </section>
  <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<script>

    function swalModal(modaltype) {
      if(modaltype=="blocked"){   
        Swal.fire({
              type: 'error',
              title: 'Oops...',
              text: 'LIMITED ACCESS: you are in the blocklist!'
          });
      }
      if(modaltype=="work-saved"){   
        Swal.fire({
              type: 'success',
              title: 'Your work was saved!',
              text: 'Thanks for your contribution!'
          });
      }
    }

    // confirm assignment request
    function requestJob(job, userid, assignedJobs) {
      //if(isBlocked)
        //swalModal("blocked");
      if(assignedJobs.length>0)
        $( "#assignbox" ).html( '<div class="alert alert-warning alert-dismissible MyFlashBox centerAction" style="width:40%">\
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>\
            <strong>Finish or withdraw from your assigned job!</strong></div>' );
      else
        bootbox.confirm({
          title: "Confirmation ",
          message: "You are going to get assigned this job, do you agree?",
          buttons: {
            confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-success' },
            cancel: { label: "<%= __('organisation.show.canceltag') %>" }
          },
          callback: function(result) {
            if (result) {
              // add CSRF, check if needed
              console.log(job);
              data = {}
              data = { job: job, userid: userid  };
              $.post("/task/assign", data)
              .done(function(msg){  
                console.log(msg); 
                location.reload(); 
              })
              .fail(function(xhr, status, error) { 
                console.log(error); 
                if(error = "Unauthorized")
                  swalModal("blocked");
              });
            }
          }
        });
     }
  // send un-assign request
  function withdrawJob(job, userid) {
       bootbox.confirm({
         title: "Confirmation",
         message: "You are going to unlock this job, are you sure?",
         buttons: {
          confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-success' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             // add CSRF, check if needed
             // console.log(job);
             data = { job: job, userid: userid  };
             $.post("/task/unassign", data, function(status) {
               //$('#taskIcon'+taskid).text("lock_outline")
               console.log(status);
               location.reload();
             });
           }
         }
       });
     }
  
  // send un-assign request
  function infoJob(job, jobStats) {
       bootbox.confirm({
         title: "Job Progress Info",
         message: "The job is validated at about "+jobStats.validated_percent+"%",
         buttons: {
          confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-success' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             console.log(jobStats);
           }
         }
       });
     }

  function loaderWait(token){
     //console.log("iframe loaded!");
     // A new access-token should be generated/registered for this user automatically
     $.post("/task/refreshtoken", {token:token}, function(status) {
        console.log(status);
      });
     var elem = document.getElementById('loading');
     elem.parentNode.removeChild(elem);
     var iframeWindow = document.getElementsByClassName("modal-dialog")[0];
     //iframeWindow.style.minWidth  = "90vw";
     iframeWindow.setAttribute("style","margin-top:2px;min-width:90vw");
     var frameHeader = document.getElementsByClassName("modal-header")[0];
     frameHeader.parentNode.removeChild(frameHeader);
     var frameFooter = document.getElementsByClassName("modal-footer")[0];
     frameFooter.parentNode.removeChild(frameFooter);

    $('.modal').removeAttr("tabindex");
      
  }

  // redirect iframe warning
  function iframeProceed(editorLink, job_id, token, user, prevWorker) {
       bootbox.confirm({
         size: 'large',
         title: "Reviewer/Evaluator Tool",
         message: "<i id='loading' style='display:block;width:100%;height:100%;color:green' class='fa fa-refresh fa-spin fa-4x fa-fw'></i>  <div class='embed-responsive embed-responsive-16by9'>\
          <iframe class='embed-responsive-item' src='"+editorLink+'?token='+token+'&userid='+user+'&job='+job_id+'&editorid='+prevWorker+"' onload='loaderWait("+'"'+token+'"'+")' allowfullscreen></iframe>\
           </div>",
         buttons: {
           confirm: { label: "DONE", className: 'btn-success' },
         },
         callback: function(result) {
          location.reload();
         }
       });
    }
    
  var iframeClose = function(event) {
          if(event.data == "action:exit"){
              var iframe = document.getElementsByClassName("modal-dialog")[0];
              iframe.parentNode.removeChild(iframe);
              var fade = document.getElementsByClassName("modal-backdrop")[0];
              fade.parentNode.removeChild(fade);
              swalModal("work-saved");
              location.reload();
          }
    }
  window.addEventListener("message", iframeClose);

  // user "blocking" confirmation
  function blockUser(orgid, userid) {
       bootbox.prompt({
         title: "User block",
         //description: "You are going to block this user from interacting with your content, are you sure?",
         value: "Why you block this user?",
         buttons: {
           confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-danger' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             data = { id: orgid, user: userid, reason: result };
             $.post("/user/block", data)
             .done(function(msg){ location.reload(); })
             .fail(function(xhr, textStatus, errorThrown) {
                console.log(xhr);
                console.log(textStatus);
                console.log(errorThrown);
              });
           }
         }
       });
     }

  // user "unblocking" confirmation
  function unblockUser(orgid, userid) {
       bootbox.confirm({
         title: "User un-block",
         message: "You are going to restore this user access to your content, are you sure?",
         buttons: {
           confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-success' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             data = { id: orgid, user: userid  };
             $.post("/user/unblock", data, function(status) {
               console.log(status);
               location.reload();
             });
           }
         }
       });
     }

  // impose user blocking "per-language"
  function blockUserLang(orgid, userid, langCode) {
       bootbox.confirm({
         title: "User's language blocking",
         message: "You are going to block this user from contributing to this language",
         buttons: {
           confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-danger' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             data = { id: orgid, user: userid, langCode: langCode };
             $.post("/user/blocklang", data)
             .done(function(msg){ location.reload(); })
             .fail(function(xhr, status, error) {
                location.reload()
              });
           }
         }
       });
     }
  // reverse previous user blocking "per-language"
  function unblockUserLang(orgid, userid, langCode) {
       bootbox.confirm({
         title: "Undo language blocking",
         message: "You are going to reverse a block imposed on this user from contributing to this language",
         buttons: {
           confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-danger' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             data = { id: orgid, user: userid, langCode: langCode };
             $.post("/user/reverse-blocklang", data)
             .done(function(msg){ location.reload(); })
             .fail(function(xhr, status, error) {
                location.reload()
              });
           }
         }
       });
     }

  // user role-modification
  function updateRole(orgid, userid, newRole) {
       bootbox.confirm({
         title: "User role modification",
         message: "You are going to assign this user a new role, are you sure?",
         buttons: {
           confirm: { label: "<%= __('organisation.show.yestag') %>", className: 'btn-success' },
           cancel: { label: "<%= __('organisation.show.canceltag') %>" }
         },
         callback: function(result) {
           if (result) {
             data = { id: orgid, user: userid, role: newRole  };
             $.post("/user/role", data, function(status) {
               console.log(status);
               location.reload();
             });
           }
         }
       });
     }
</script>


<!-- sweetalert modals -->
<% block('localScripts', '<link href="/plugins/sweetalert/sweetalert2.min.css" rel="stylesheet" type="text/css">') %>
<% block('localScripts', '<script src="/plugins/sweetalert/sweetalert2.min.js"></script>') %>

<!-- load extra .js plugins only for this view -->
<% block('localScripts', '<script src="/plugins/bootstrap-table-filter-control.min.js"></script>') %>
<% block('localScripts', '<script src="/js/dashboard-app.js"></script>') %>
<% block('localScripts', '<script src="/plugins/bootbox.min.js"></script>') %>
